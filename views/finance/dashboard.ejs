<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Finance Dashboard</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <%- include("../layouts/layout.ejs") %>
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Poppins', sans-serif;
        }
        .container {
            max-width: 1750px;
            background: #ffffff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
        }
        .card {
            margin-bottom: 20px;
            border-radius: 10px;
        }
        canvas {
            width: 100% !important;
            height: auto !important;
        }
        .horizontal-cards .card {
            margin-right: 20px;
        }
        .horizontal-cards {
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 20px;
        }
        .horizontal-cards .card-body {
            padding: 20px;
        }
        .card-header {
            font-size: 18px;
            font-weight: bold;
        }
        .btn {
            font-size: 14px;
        }
        .table-wrapper {
            max-height: 400px;
            overflow-y: auto;
        }
        /* Responsive Design */
        @media (max-width: 768px) {
            .horizontal-cards .card {
                width: 100%;
            }
            .col-md-5, .col-md-7 {
                width: 100%;
            }
            .col-md-8, .col-md-4 {
                width: 100%;
            }
        }
    </style>
</head>
<body>

    <% layout("/layouts/boilerplate")%>
    <div class="container">
        <h2 class="text-center mb-4">Finance Dashboard</h2>

        <!-- Horizontal Cards for Budget, Expenses, Income -->
        <div class="horizontal-cards mb-4">
            <div class="card text-white bg-info" style="flex: 1; color: rgb(254, 125, 125);">
                <div class="card-body">
                    <h5 class="card-title">Budget</h5>
                    <p class="card-text" id="budgetAmount">₹<%= budget %></p>
                    <button class="btn btn-secondary w-100 mb-3" id="setBudgetBtn">Set Budget</button>
                </div>
            </div>
            <div class="card text-white bg-danger" style="flex: 1;">
                <div class="card-body">
                    <h5 class="card-title">Expenses</h5>
                    <p class="card-text" id="expensesAmount">₹<%= expenses.reduce((sum, expense) => sum + expense.amount, 0) %></p>
                    <button class="btn btn-primary w-100 mb-3" id="addTransactionBtn">Add Transaction</button>
                </div>
            </div>
            <div class="card text-white bg-success" style="flex: 1;">
                <div class="card-body">
                    <h5 class="card-title">Income</h5>
                    <p class="card-text" id="incomeAmount">₹<%= income.reduce((sum, inc) => sum + inc.amount, 0) %></p>
                    <button class="btn btn-secondary w-100" id="addIncomeBtn">Add Income</button>
                </div>
            </div>
        </div>

        <!-- Categorical Expenses Pie Chart and Add Transactions Card -->
        <div class="row mb-4">
            <div class="col-md-4">
                <div class="card">
                    <h5 class="card-header">Expense Breakdown</h5>
                    <div class="card-body">
                        <canvas id="expenseBreakdownChart"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-md-8">
              <div class="card">
                  <h5 class="card-header">All Expenses Transactions</h5>
                  <div class="card-body">
                      <div class="table-wrapper">
                          <table class="table table-striped">
                              <thead>
                                  <tr>
                                      <th>Date</th>
                                      <th>Category</th>
                                      <th>Amount</th>
                                  </tr>
                              </thead>
                              <tbody>
                                  <% expenses.forEach(function(expense) { %>
                                      <tr>
                                          <td><%= expense.date %></td>
                                          <td><%= expense.category %></td>
                                          <td>₹<%= expense.amount %></td>
                                      </tr>
                                  <% }) %>
                              </tbody>
                          </table>
                      </div>
                  </div>
              </div>
          </div>
            

        <!-- Transaction History and Graphs -->
        

        <div class="row">
            <div class="col-md-4">
                <div class="card">
                    <h5 class="card-header">Income Graph</h5>
                    <div class="card-body">
                        <canvas id="incomeGraph"></canvas>
                    </div>
                </div>
            </div>

            <div class="col-md-8">
              <div class="card">
                  <h5 class="card-header">All Income Transactions</h5>
                  <div class="card-body">
                      <div class="table-wrapper">
                          <table class="table table-striped">
                              <thead>
                                  <tr>
                                      <th>Date</th>
                                      <th>Source</th>
                                      <th>Amount</th>
                                  </tr>
                              </thead>
                              <tbody>
                                  <% income.forEach(function(inc) { %>
                                      <tr>
                                          <td><%= inc.date %></td>
                                          <td><%= inc.source %></td>
                                          <td>₹<%= inc.amount %></td>
                                      </tr>
                                  <% }) %>
                              </tbody>
                          </table>
                      </div>
                  </div>
              </div>
          </div>
      </div>

        </div>

        <div class="row mt-4">
          
            

            <div class="col-md-4">
                <div class="card">
                    <h5 class="card-header">Weekly Expense Comparison</h5>
                    <div class="card-body">
                        <canvas id="weeklyExpenseChart"></canvas>
                    </div>
                </div>
            </div>
    

            <div class="col-md-6">
                <div class="card">
                    <h5 class="card-header">Graph Overview</h5>
                    <div class="card-body">
                        <canvas id="overviewGraph"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Prepare data for charts using dynamic data from EJS
        const expenses = <%- JSON.stringify(expenses) %>;
        const income = <%- JSON.stringify(income) %>;
        const budget = <%= budget %>;

        // Expense Breakdown Pie Chart
        const expenseCategories = {};
        expenses.forEach(expense => {
            expenseCategories[expense.category] = (expenseCategories[expense.category] || 0) + expense.amount;
        });

        new Chart(document.getElementById("expenseBreakdownChart"), {
            type: "pie",
            data: {
                labels: Object.keys(expenseCategories),
                datasets: [{
                    data: Object.values(expenseCategories),
                    backgroundColor: ["#007bff", "#28a745", "#dc3545", "#ffc107", "#17a2b8"],
                    borderColor: "#fff",
                    borderWidth: 1
                }]
            },
            options: { responsive: true, plugins: { legend: { position: "bottom" } } }
        });

        // Weekly Expense Comparison Bar Chart
        const weeklyExpenses = {};
        expenses.forEach(entry => {
            const week = new Date(entry.date).toLocaleDateString("en-GB", { weekday: "long" });
            weeklyExpenses[week] = (weeklyExpenses[week] || 0) + entry.amount;
        });

        new Chart(document.getElementById("weeklyExpenseChart"), {
            type: "bar",
            data: {
                labels: Object.keys(weeklyExpenses),
                datasets: [{
                    label: "Expenses (₹)",
                    data: Object.values(weeklyExpenses),
                    backgroundColor: "#dc3545"
                }]
            },
            options: { responsive: true, scales: { y: { beginAtZero: true } } }
        });

        // Income Graph (Example)
        const weeklyIncome = {};
        income.forEach(entry => {
            const week = new Date(entry.date).toLocaleDateString("en-GB", { weekday: "long" });
            weeklyIncome[week] = (weeklyIncome[week] || 0) + entry.amount;
        });

        new Chart(document.getElementById("incomeGraph"), {
            type: "line",
            data: {
                labels: Object.keys(weeklyIncome),
                datasets: [{
                    label: "Income (₹)",
                    data: Object.values(weeklyIncome),
                    borderColor: "#28a745",
                    fill: false
                }]
            },
            options: { responsive: true }
        });

        // Overview Graph (Example)
        const totalIncome = income.reduce((sum, entry) => sum + entry.amount, 0);
        const totalExpenses = expenses.reduce((sum, entry) => sum + entry.amount, 0);
        new Chart(document.getElementById("overviewGraph"), {
            type: "line",
            data: {
                labels: ["January", "February", "March", "April", "May"],
                datasets: [{
                    label: "Income (₹)",
                    data: [totalIncome, totalIncome + 20000, totalIncome + 40000, totalIncome + 60000, totalIncome + 80000],
                    borderColor: "#28a745",
                    fill: false
                }, {
                    label: "Expenses (₹)",
                    data: [totalExpenses, totalExpenses + 5000, totalExpenses + 10000, totalExpenses + 15000, totalExpenses + 20000],
                    borderColor: "#dc3545",
                    fill: false
                }]
            }
        });

        document.getElementById('addTransactionBtn').addEventListener('click', function() {
            window.location.href = '/finance/add-expense';  // Redirects to the add-expense route
        });
        document.getElementById('setBudgetBtn').addEventListener('click', function() {
            window.location.href = '/finance/set-budget';  // Redirects to the add-expense route
        });
        document.getElementById('addIncomeBtn').addEventListener('click', function() {
            window.location.href = '/finance/add-income';  // Redirects to the add-expense route
        });
    </script>

</body>
</html>