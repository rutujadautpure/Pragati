<% layout('/layouts/adminBoilerplate') %>

<div class="left">
  <h1>Schemes</h1>
</div>
<div class="row">
    <div style=" border: 1px solid #ccc;">
      <div class="table-data">
        <div class="order">
          <div class="head">
            <h3>All Schemes</h3>
            <button class="btn btn-primary" onclick="showForm()">Add Scheme</button>
            <i class='bx bx-filter'></i>
          </div>
          <table>
            <thead>
              <tr>
                <th style="max-width: 150px;">Scheme Name</th>
                <th>Description</th>
                <th style="max-width: 150px;">Category</th>
                <th style="max-width: 150px;">Website</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="videoTableBody">
              <% if (!videos || videos.length === 0) { %>
              <tr>
                <td colspan="5" class="text-center">No videos available</td>
              </tr>
              <% } %>
            </tbody>
          </table>
          
          <nav aria-label="Page navigation example" style="margin-top: 20px;">
            <ul class="pagination justify-content-center" id="pagination"></ul>
          </nav>
        </div>
      </div>
    </div>
</div>

<div id="formOverlay" 
  style="display: none; position: fixed; top: 0; left: 0; width: 100vw; height: 100vh; background-color: rgba(0, 0, 0, 0.5); z-index: 1050; justify-content: center; align-items: center;">
  
  <div class="table-data" style="background-color: #fff; padding: 20px; border-radius: 10px; max-width: 600px; width: 100%;">
    <div class="todo">
      <div class="head d-flex justify-content-between align-items-center">
        <h3>Add Scheme</h3>
        <button style="border: none; background: none; font-size: 20px; cursor: pointer;" onclick="hideForm()">âœ–</button>
      </div>
      <div class="todo-list">
        <form action="/admin/addVideo" method="post" class="needs-validation" novalidate>
          <div class="mb-3">
            <label for="name" class="form-label">Scheme Name:</label>
            <input type="text" id="name" name="name" class="form-control" required />
          </div>

          <div class="mb-3">
            <label for="description" class="form-label">Description:</label>
            <textarea id="description" name="description" class="form-control" rows="4" required></textarea>
          </div>

          <div class="mb-3">
            <label for="category" class="form-label">Category:</label>
            <select id="category" name="category" class="form-select" required>
              <% categories.forEach(function(category) { %>
              <option value="<%= category %>"><%= category %></option>
              <% }) %>
            </select>
          </div>

          <button type="submit" class="btn btn-primary">Add Scheme</button>
        </form>
      </div>
    </div>
  </div>
</div>


  
  <script>
    const videos = <%- JSON.stringify(videos) %>;
    const rowsPerPage = 7;
    let currentPage = 1;
  
    function displayVideos(page) {
      const startIndex = (page - 1) * rowsPerPage;
      const endIndex = startIndex + rowsPerPage;
      const paginatedVideos = videos.slice(startIndex, endIndex);
  
      const tableBody = document.getElementById('videoTableBody');
      tableBody.innerHTML = '';
  
      paginatedVideos.forEach(video => {
        const row = `<tr>
          <td style="max-width: 150px;">${video.name}</td>
          <td style="max-width: 150px;">${video.description}</td>
          <td style="max-width: 150px;">${video.category}</td>
          <td style="max-width: 150px;">${video.website}</td>
          <td>
            <button class="btn btn-outline-danger d-block" onclick="deleteVideo('${video._id}')">Delete</button>
          </td>
        </tr>`;
        tableBody.innerHTML += row;
      });
      generatePagination();
    }
  
    function generatePagination() {
      const totalPages = Math.ceil(videos.length / rowsPerPage);
      const paginationContainer = document.getElementById('pagination');
      paginationContainer.innerHTML = '';
  
      const prevLi = document.createElement('li');
      prevLi.className = `page-item ${currentPage === 1 ? 'disabled' : ''}`;
      prevLi.innerHTML = `<a class="page-link" href="#">Previous</a>`;
      prevLi.onclick = () => { if (currentPage > 1) displayVideos(--currentPage); };
      paginationContainer.appendChild(prevLi);
  
      for (let i = 1; i <= totalPages; i++) {
        const li = document.createElement('li');
        li.className = `page-item ${i === currentPage ? 'active' : ''}`;
        li.innerHTML = `<a class="page-link" href="#">${i}</a>`;
        li.onclick = () => { currentPage = i; displayVideos(i); };
        paginationContainer.appendChild(li);
      }
  
      const nextLi = document.createElement('li');
      nextLi.className = `page-item ${currentPage === totalPages ? 'disabled' : ''}`;
      nextLi.innerHTML = `<a class="page-link" href="#">Next</a>`;
      nextLi.onclick = () => { if (currentPage < totalPages) displayVideos(++currentPage); };
      paginationContainer.appendChild(nextLi);
    }
  
    displayVideos(1);
  
 function previewVideo(url) {
  window.open(url, '_blank');
}
function showForm() {
    document.getElementById('formOverlay').style.display = 'flex';
  }

  function hideForm() {
    document.getElementById('formOverlay').style.display = 'none';
  }

  function deleteVideo(videoId) {
    if (confirm('Are you sure you want to delete this video?')) {
      fetch(`/admin/deleteVideo/${videoId}`, {
        method: 'DELETE',
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert(data.message);
          location.reload(); 
        } else {
          alert('Error: ' + data.message);
        }
      })
      .catch(error => console.error('Error:', error));
    }
  }
</script>
